name: "build-test"
on: ["push"]

jobs:
  build: # make sure build/ci work properly
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: pnpm/action-setup@v2.0.1
        with:
          version: 6
      - run: |
          pnpm install
      - run: |
          pnpm run all

  # make sure the action works on a clean machine without building
  test_jq:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: changelog-parser
        uses: ./
        with:
          filePath: "./CHANGELOG.md"
      - run: |
          echo "$CHANGELOG" | jq -r '.versions[0].parsed._ | join("\n")'
        env:
          CHANGELOG: "${{ steps.changelog-parser.outputs.parsed }}"

  test_default:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: changelog-parser
        uses: ./
      - run: |
          echo "Parsed changelog is:"
          echo "$CHANGELOG" | jq
          echo "========================================"
          echo "The latest version is $CHANGELOG_VERSION"
          echo "========================================"
          echo "The changelog body in the latest version is $CHANGELOG_BODY"
          echo "========================================"
          echo "The latest version body is $CHANGELOG_LATEST_BODY"
        env:
          CHANGELOG: "${{ steps.changelog-parser.outputs.parsed }}"
          CHANGELOG_VERSION: "${{ fromJSON(steps.changelog-parser.outputs.parsed).versions[0].version }}"
          CHANGELOG_BODY: "${{ fromJSON(steps.changelog-parser.outputs.parsed).versions[0].body }}"
          CHANGELOG_LATEST_BODY: "${{ steps.changelog-parser.outputs.latestBody }}"

  test_remove_markdown_true:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: changelog-parser
        uses: ./
        with:
          removeMarkdown: true
      - run: |
          echo "Parsed changelog is:"
          echo "$CHANGELOG" | jq
          echo "========================================"
          echo "The latest version is $CHANGELOG_VERSION"
          echo "========================================"
          echo "The changelog body in the latest version is $CHANGELOG_BODY"
          echo "========================================"
          echo "The latest version body is $CHANGELOG_LATEST_BODY"
        env:
          CHANGELOG: "${{ steps.changelog-parser.outputs.parsed }}"
          CHANGELOG_VERSION: "${{ fromJSON(steps.changelog-parser.outputs.parsed).versions[0].version }}"
          CHANGELOG_BODY: "${{ fromJSON(steps.changelog-parser.outputs.parsed).versions[0].body }}"
          CHANGELOG_LATEST_BODY: "${{ steps.changelog-parser.outputs.latestBody }}"

  test_remove_markdown_false:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: changelog-parser
        uses: ./
        with:
          removeMarkdown: false
      - run: |
          echo "Parsed changelog is:"
          echo "$CHANGELOG" | jq
          echo "========================================"
          echo "The latest version is $CHANGELOG_VERSION"
          echo "========================================"
          echo "The changelog body in the latest version is $CHANGELOG_BODY"
          echo "========================================"
          echo "The latest version body is $CHANGELOG_LATEST_BODY"
        env:
          CHANGELOG: "${{ steps.changelog-parser.outputs.parsed }}"
          CHANGELOG_VERSION: "${{ fromJSON(steps.changelog-parser.outputs.parsed).versions[0].version }}"
          CHANGELOG_BODY: "${{ fromJSON(steps.changelog-parser.outputs.parsed).versions[0].body }}"
          CHANGELOG_LATEST_BODY: "${{ steps.changelog-parser.outputs.latestBody }}"

  test_file_path:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: changelog-parser
        uses: ./
        with:
          filePath: "./CHANGELOG.md"
      - run: |
          echo "Parsed changelog is:"
          echo "$CHANGELOG" | jq
          echo "========================================"
          echo "The latest version is $CHANGELOG_VERSION"
          echo "========================================"
          echo "The changelog body in the latest version is $CHANGELOG_BODY"
          echo "========================================"
          echo "The latest version body is $CHANGELOG_LATEST_BODY"
        env:
          CHANGELOG: "${{ steps.changelog-parser.outputs.parsed }}"
          CHANGELOG_VERSION: "${{ fromJSON(steps.changelog-parser.outputs.parsed).versions[0].version }}"
          CHANGELOG_BODY: "${{ fromJSON(steps.changelog-parser.outputs.parsed).versions[0].body }}"
          CHANGELOG_LATEST_BODY: "${{ steps.changelog-parser.outputs.latestBody }}"
